#!/bin/sh

hflg=0
aflg=0
fflg=0
mflg=0
rflg=0
pflg=0
fflg=0
cflg=0

if test $# -eq 0 ;then
	hflg=1
elif test $1 = "help" ;then
	hflg=1
fi

while getopts ha:m:rpf:c: opt ;do
	case $opt in
		h)hflg=1;;
		a)aflg=1;aarg=$OPTARG;;
		m)mflg=1;marg=$OPTARG;;
		r)rflg=1;;
		p)pflg=1;;
		f)fflg=1;farg=$OPTARG;;
		c)cflg=1;carg=$OPTARG;;
	esac
done
shift $(($OPTIND - 1))

if test $hflg -eq 1 ;then
	echo -n "Usage: git2 [clone] [add [file]] [branch]
	    [branch [existed_branch]] [branch [not_existed_branch]]
	    [commit] [merge [branch]] [push] [cm [branch]] [cmp [branch]] [ac [file]]	
 clone : _____________________ super clone
 add [file]: _________________ super add
 branch: _____________________ show branch
 branch [existed_branch]: ____ checkout
 branch [not_existed_branch]:_ create branch -> checkout
 commit: _____________________ super commit
 merge [branch]: _____________ checkout -> merge preview_branch -> checkout preview_branch
 push: _______________________ checkout master -> push -> checkout preview_branch
 cm [branch]: ________________ git2 commit -> git2 merge [branch]
 cmp [branch]: _______________ git2 commit -> git2 merge [branch] -> git2 push
 ac [file]: __________________ git2 add [file] -> git2 commit

 [+]aliases:
 a: add
 b: branch
 c: commit
 m: merge
 p: push
 "
	rmtmp
	exit 0
fi

branchsave(){
	git branch > branch.tmp
	cat git2.tmp | grep -E "\*" | perl -pe "s@\*(.*)@\1@g" > now.tmp
}

if test $1 = "add" -o $1 = "a" ;then
	git branch
	git add $2
	git status
	rmtmp
	exit 0
fi

if test $1 = "status" -o $1 = "s" ;then
	git branch
	git status
	rmtmp
	exit 0
fi

if test $1 = "commit" -o $1 = "c" ;then
	branchsave
	git branch
	git status
	echo -n "\n[+]comment : "
	read msg
	git commit -m "$msg"
	echo "\n[+]COMMIT FINISH!\n"
	rmtmp
	exit 0
fi

if test "$1" = "addcommit" -o "$1" = "ac" ;then
	git2 add $2
	git2 commit
	rmtmp
	exit 0
fi

if test "$1" = "merge" -o "$1" = "m" ;then
	branchsave
	git checkout $2
	git merge $(cat now.tmp)
	git checkout $(cat now.tmp)
	rmtmp
	exit 0
fi

if test $1 = "push" -o $1 = "p" ;then
	if test "$(png github.com)" = "OK" ;then
		branchsave
		git checkout master
		git push
		git checkout $(cat now.tmp)
		rmtmp
	fi
	exit 0
fi

if test "$1" = "branch" -o "$1" = "b" ;then
	branchsave
	if test $# -eq 1 ;then
		git branch
	fi
	if test $# -ge 2 ;then
		if test ! "$(cat branch.tmp | grep $2)" ;then
			git branch $2
			git checkout $2
			git branch
		else
			git branch
			echo '\n[+]GIT CHECKOUT\n'
			git checkout $2
			git branch
		fi
	fi
	rmtmp
	exit 0
fi

if test "$1" = "cm" -o "$1" = "commitmerge" ;then
	git2 commit
	git2 merge
	rmtmp
	exit 0
fi

if test "$1" = "cmp" -o "$1" = "commitmergepush" ;then
	git2 commit
	git2 merge
	git2 push
	rmtmp
	exit 0
fi

if test $1 = "rmindex" ;then
	git rm --cache $2
	rmtmp
	exit 0
fi

if test $1 = "clone" ;then
	if test $# -eq 3 ;then
		git clone "http://github.com/"$2"/"$3".git"
	elif test $# -eq 4 ;then
		git clone "http://github.com/"$2"/"$3".git "$4
	elif test $# -eq 1 ;then
		echo -n "UserName: "
		read username
		echo -n "Repository: "
		read repository
		echo -n "Directory: "
		read directory
		git clone "http://github.com/"$username"/"$repository".git" $directory
	fi
	rmtmp
	exit 0
fi

if test $1 = "cp" ;then
	if test $3 = "mt" ;then
		dst="$HOME/git/miyagawtools/"
	elif test $3 = "mp" ;then
		dst="$HOME/git/miyagawpeda"
	elif test $3 = "tmp" ;then
		dst="$HOME/git/tmp"
	elif test $3 = "io" ;then
		dst="$HOME/git/miyagaw61.github.io"
	elif test $3 = "mc" ;then
		dst="$HOME/git/miyactf"
	fi
	cp -a $2 $dst
	rmtmp
	exit 0
fi

if test $1 = "remote"  -o $1 = "r" ;then
	now=$(pwd)
	arg=$(basename ${now})
	echo -n username:
	read user
	git remote rm origin
	git remote add origin https://github.com/${user}/${arg}
	rmtmp
	exit 0
fi

if test "$1" = "cd" ;then
	if test $2 = "miyagawtools" -o $2 = "mt" ;then
		sa
		args=$@
		args=$(echo $args | perl -pe 's/'$2'//g' | perl -pe 's/cd//g')
		if test $# -ge 2 ;then
			for var in $args ;do
				cp -a $var $HOME/git/miyagawtools/
			done
		fi
		cd $HOME/git/miyagawtools/
		exec /bin/bash
		exit 0
	fi

	if test $2 = "tmp" ;then
		sa
		args=$@
		args=$(echo $args | perl -pe 's/'$2'//g' | perl -pe 's/cd//g')
		if test $# -ge 2 ;then
			for var in $args ;do
				cp -a $var $HOME/git/tmp/
			done
		fi
		cd $HOME/git/tmp/
		exec /bin/bash
		exit 0
	fi

	if test $2 = "miyagawpeda" -o $2 = "mp" ;then
		sa
		args=$@
		args=$(echo $args | perl -pe 's/'$2'//g' | perl -pe 's/cd//g')
		if test $# -ge 2 ;then
			for var in $args ;do
				cp -a $var $HOME/git/miyagawpeda/
			done
		fi
		cd $HOME/git/miyagawpeda/
		exec /bin/bash
		exit 0
	fi

	if test $2 = "miyagaw61.github.io" -o $2 = "github.io" -o $2 = "io" ;then
		sa
		args=$@
		args=$(echo $args | perl -pe 's/'$2'//g' | perl -pe 's/cd//g')
		if test $# -ge 2 ;then
			for var in $args ;do
				cp -a $var $HOME/git/miyagaw61.github.io/
			done
		fi
		cd $HOME/git/miyagaw61.github.io/
		exec /bin/bash
		exit 0
	fi

	if test $2 = "miyactf" -o $2 = "mc" ;then
		sa
		args=$@
		args=$(echo $args | perl -pe 's/'$2'//g' | perl -pe 's/cd//g')
		if test $# -ge 2 ;then
			for var in $args ;do
				cp -a $var $HOME/git/miyactf/
			done
		fi
		cd $HOME/git/miyactf/
		exec /bin/bash
		exit 0
	fi
fi

